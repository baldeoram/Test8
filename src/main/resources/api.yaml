openapi: 3.0.3
info:
  title: Sample API
  description: A sample API to illustrate different tags for different controllers.
  version: "1.0.0"

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: User
    description: Operations related to users
  - name: Product
    description: Operations related to products
  - name: Order
    description: Operations related to orders

paths:
  /users:
    get:
      tags:
        - UserController
      summary: Get list of users
      operationId: getUsers
      responses:
        '200':
          description: list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      tags:
        - UserController
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created

  /products:
    get:
      tags:
        - ProductController
      summary: Get list of products
      operationId: getProducts
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /orders:
    post:
      tags:
        - OrderController
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: float

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
